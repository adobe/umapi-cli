name: Package

on:
  push:
    tags:
    - 'v*'
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [macos-12, windows-2022]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: 1.5.1
      - name: Create build
        shell: bash
        run: make
      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Prepare artifacts
        shell: bash
        run: |
          distname=umapi-cli-${{ steps.get_version.outputs.version }}
          cd dist
          if [ "${{ matrix.os }}" = "windows-2022" ]; then
            7z a "$distname.zip" umapi.exe
            echo "EXECUTABLE=$distname.zip" >> $GITHUB_ENV
            echo "SDIST=umapi_cli-${{ steps.get_version.output.version }}.tar.gz" >> $GITHUB_ENV
            echo "BDIST=umapi_cli-${{ steps.get_version.output.version }}-py3-none-any.whl" >> $GITHUB_ENV
          else
            tar czf "$distname.tar.gz" umapi
            echo "EXECUTABLE=$distname.tar.gz" >> $GITHUB_ENV
          fi
          cd ..
      - name: Save executable
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: dist/${{env.EXECUTABLE}}
          retention-days: 30
      - name: Save dists
        if: matrix.os == 'windows-2022'
        uses: actions/upload-artifact@v3
        with:
          name: release-artifacts
          path: |
            dist/${{env.SDIST}}
            dist/${{env.BDIST}}
          retention-days: 30
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: UMAPI CLI Tool ${{ steps.get_version.outputs.version }}
          files: release-artifacts/*
